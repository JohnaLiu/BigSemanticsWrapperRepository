package ecologylab.semantics.generated.library.product_and_service;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2013) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.generated.library.gis.GisLocation;
import ecologylab.semantics.generated.library.gis.PostalAddress;
import ecologylab.semantics.generated.library.misc.Review;
import ecologylab.semantics.metadata.builtins.CompoundDocument;
import ecologylab.semantics.metadata.builtins.Image;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataInteger;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.Integer;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class Commodity extends CompoundDocument
{
	@simpl_composite
	@mm_name("image")
	private Image image;

	@simpl_scalar
	private MetadataString price;

	@simpl_scalar
	private MetadataString overallRating;

	@simpl_scalar
	private MetadataInteger numReviews;

	@simpl_collection("review")
	@mm_name("reviews")
	private List<Review> reviews;

	@simpl_scalar
	private MetadataParsedURL reviewsLocation;

	@simpl_composite
	@mm_name("seller_website")
	private CompoundDocument sellerWebsite;

	@simpl_composite
	@mm_name("seller_address")
	private PostalAddress sellerAddress;

	@simpl_composite
	@mm_name("seller_gis_location")
	private GisLocation sellerGisLocation;

	public Commodity()
	{ super(); }

	public Commodity(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public Image getImage()
	{
		return image;
	}

	public void setImage(Image image)
	{
		this.image = image;
	}

	public MetadataString	price()
	{
		MetadataString	result = this.price;
		if (result == null)
		{
			result = new MetadataString();
			this.price = result;
		}
		return result;
	}

	public String getPrice()
	{
		return this.price == null ? null : price().getValue();
	}

	public MetadataString getPriceMetadata()
	{
		return price;
	}

	public void setPrice(String price)
	{
		if (price != null)
			this.price().setValue(price);
	}

	public void setPriceMetadata(MetadataString price)
	{
		this.price = price;
	}

	public MetadataString	overallRating()
	{
		MetadataString	result = this.overallRating;
		if (result == null)
		{
			result = new MetadataString();
			this.overallRating = result;
		}
		return result;
	}

	public String getOverallRating()
	{
		return this.overallRating == null ? null : overallRating().getValue();
	}

	public MetadataString getOverallRatingMetadata()
	{
		return overallRating;
	}

	public void setOverallRating(String overallRating)
	{
		if (overallRating != null)
			this.overallRating().setValue(overallRating);
	}

	public void setOverallRatingMetadata(MetadataString overallRating)
	{
		this.overallRating = overallRating;
	}

	public MetadataInteger	numReviews()
	{
		MetadataInteger	result = this.numReviews;
		if (result == null)
		{
			result = new MetadataInteger();
			this.numReviews = result;
		}
		return result;
	}

	public Integer getNumReviews()
	{
		return this.numReviews == null ? 0 : numReviews().getValue();
	}

	public MetadataInteger getNumReviewsMetadata()
	{
		return numReviews;
	}

	public void setNumReviews(Integer numReviews)
	{
		if (numReviews != 0)
			this.numReviews().setValue(numReviews);
	}

	public void setNumReviewsMetadata(MetadataInteger numReviews)
	{
		this.numReviews = numReviews;
	}

	public List<Review> getReviews()
	{
		return reviews;
	}

  // lazy evaluation:
  public List<Review> reviews()
  {
    if (reviews == null)
      reviews = new ArrayList<Review>();
    return reviews;
  }

  // addTo:
  public void addToReviews(Review element)
  {
    reviews().add(element);
  }

  // size:
  public int reviewsSize()
  {
    return reviews == null ? 0 : reviews.size();
  }

	public void setReviews(List<Review> reviews)
	{
		this.reviews = reviews;
	}

	public MetadataParsedURL	reviewsLocation()
	{
		MetadataParsedURL	result = this.reviewsLocation;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.reviewsLocation = result;
		}
		return result;
	}

	public ParsedURL getReviewsLocation()
	{
		return this.reviewsLocation == null ? null : reviewsLocation().getValue();
	}

	public MetadataParsedURL getReviewsLocationMetadata()
	{
		return reviewsLocation;
	}

	public void setReviewsLocation(ParsedURL reviewsLocation)
	{
		if (reviewsLocation != null)
			this.reviewsLocation().setValue(reviewsLocation);
	}

	public void setReviewsLocationMetadata(MetadataParsedURL reviewsLocation)
	{
		this.reviewsLocation = reviewsLocation;
	}

	public CompoundDocument getSellerWebsite()
	{
		return sellerWebsite;
	}

	public void setSellerWebsite(CompoundDocument sellerWebsite)
	{
		this.sellerWebsite = sellerWebsite;
	}

	public PostalAddress getSellerAddress()
	{
		return sellerAddress;
	}

	public void setSellerAddress(PostalAddress sellerAddress)
	{
		this.sellerAddress = sellerAddress;
	}

	public GisLocation getSellerGisLocation()
	{
		return sellerGisLocation;
	}

	public void setSellerGisLocation(GisLocation sellerGisLocation)
	{
		this.sellerGisLocation = sellerGisLocation;
	}
}
