//
// CreativeWork.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.CreativeWorkNS;
using Ecologylab.Semantics.Generated.Library.MiscNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.CreativeWorkNS 
{
	[SimplInherit]
	public class CreativeWork : CompoundDocument
	{
		[SimplCollection("author")]
		[MmName("authors")]
		private List<Author<CreativeWork>> authors;

		[SimplScalar]
		[SimplOtherTags(new String[] {"year_of_publication"})]
		private MetadataInteger year;

		/// <summary>
		/// rating in some context
		/// </summary>
		[SimplScalar]
		private MetadataString overallRating;

		[SimplComposite]
		[MmName("rating")]
		private Rating rating;

		[SimplComposite]
		[MmName("rich_media")]
		private CompoundDocument richMedia;

		public CreativeWork()
		{ }

		public CreativeWork(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<Author<CreativeWork>> Authors
		{
			get{return authors;}
			set
			{
				if (this.authors != value)
				{
					this.authors = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger Year
		{
			get{return year;}
			set
			{
				if (this.year != value)
				{
					this.year = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString OverallRating
		{
			get{return overallRating;}
			set
			{
				if (this.overallRating != value)
				{
					this.overallRating = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Rating Rating
		{
			get{return rating;}
			set
			{
				if (this.rating != value)
				{
					this.rating = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public CompoundDocument RichMedia
		{
			get{return richMedia;}
			set
			{
				if (this.richMedia != value)
				{
					this.richMedia = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
