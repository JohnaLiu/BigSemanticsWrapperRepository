package ecologylab.bigsemantics.generated.library.googleBook;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2013) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.googleBook.Page;
import ecologylab.bigsemantics.generated.library.publication.Book;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.scalar.MetadataParsedURL;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.net.ParsedURL;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class GoogleBook extends Book
{
	@simpl_scalar
	private MetadataString category;

	@simpl_scalar
	private MetadataParsedURL placesMentionedKml;

	@simpl_collection("page")
	@mm_name("selected_pages")
	private List<Page> selectedPages;

	public GoogleBook()
	{ super(); }

	public GoogleBook(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	category()
	{
		MetadataString	result = this.category;
		if (result == null)
		{
			result = new MetadataString();
			this.category = result;
		}
		return result;
	}

	public String getCategory()
	{
		return this.category == null ? null : category().getValue();
	}

	public MetadataString getCategoryMetadata()
	{
		return category;
	}

	public void setCategory(String category)
	{
		if (category != null)
			this.category().setValue(category);
	}

	public void setCategoryMetadata(MetadataString category)
	{
		this.category = category;
	}

	public MetadataParsedURL	placesMentionedKml()
	{
		MetadataParsedURL	result = this.placesMentionedKml;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.placesMentionedKml = result;
		}
		return result;
	}

	public ParsedURL getPlacesMentionedKml()
	{
		return this.placesMentionedKml == null ? null : placesMentionedKml().getValue();
	}

	public MetadataParsedURL getPlacesMentionedKmlMetadata()
	{
		return placesMentionedKml;
	}

	public void setPlacesMentionedKml(ParsedURL placesMentionedKml)
	{
		if (placesMentionedKml != null)
			this.placesMentionedKml().setValue(placesMentionedKml);
	}

	public void setPlacesMentionedKmlMetadata(MetadataParsedURL placesMentionedKml)
	{
		this.placesMentionedKml = placesMentionedKml;
	}

	public List<Page> getSelectedPages()
	{
		return selectedPages;
	}

  // lazy evaluation:
  public List<Page> selectedPages()
  {
    if (selectedPages == null)
      selectedPages = new ArrayList<Page>();
    return selectedPages;
  }

  // addTo:
  public void addToSelectedPages(Page element)
  {
    selectedPages().add(element);
  }

  // size:
  public int selectedPagesSize()
  {
    return selectedPages == null ? 0 : selectedPages.size();
  }

	public void setSelectedPages(List<Page> selectedPages)
	{
		this.selectedPages = selectedPages;
	}
}
