package ecologylab.bigsemantics.generated.library.museum;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2014) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creative_work.CreativeWork;
import ecologylab.bigsemantics.generated.library.museum.FlamencoObject;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class FlamencoObject extends CreativeWork
{
	@simpl_scalar
	private MetadataString parent;

	@simpl_scalar
	private MetadataString category;

	@simpl_collection("flamenco_object")
	@mm_name("flamenco_objects")
	private List<FlamencoObject> flamencoObjects;

	@simpl_collection("flamenco_object")
	@mm_name("sub_facets")
	private List<FlamencoObject> subFacets;

	@simpl_scalar
	private MetadataString mediaType;

	@simpl_collection("flamenco_object")
	@mm_name("general_facets")
	private List<FlamencoObject> generalFacets;

	@simpl_collection("flamenco_object")
	@mm_name("specific_facets")
	private List<FlamencoObject> specificFacets;

	public FlamencoObject()
	{ super(); }

	public FlamencoObject(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	parent()
	{
		MetadataString	result = this.parent;
		if (result == null)
		{
			result = new MetadataString();
			this.parent = result;
		}
		return result;
	}

	public String getParent()
	{
		return this.parent == null ? null : parent().getValue();
	}

	public MetadataString getParentMetadata()
	{
		return parent;
	}

	public void setParent(String parent)
	{
		if (parent != null)
			this.parent().setValue(parent);
	}

	public void setParentMetadata(MetadataString parent)
	{
		this.parent = parent;
	}

	public MetadataString	category()
	{
		MetadataString	result = this.category;
		if (result == null)
		{
			result = new MetadataString();
			this.category = result;
		}
		return result;
	}

	public String getCategory()
	{
		return this.category == null ? null : category().getValue();
	}

	public MetadataString getCategoryMetadata()
	{
		return category;
	}

	public void setCategory(String category)
	{
		if (category != null)
			this.category().setValue(category);
	}

	public void setCategoryMetadata(MetadataString category)
	{
		this.category = category;
	}

	public List<FlamencoObject> getFlamencoObjects()
	{
		return flamencoObjects;
	}

  // lazy evaluation:
  public List<FlamencoObject> flamencoObjects()
  {
    if (flamencoObjects == null)
      flamencoObjects = new ArrayList<FlamencoObject>();
    return flamencoObjects;
  }

  // addTo:
  public void addToFlamencoObjects(FlamencoObject element)
  {
    flamencoObjects().add(element);
  }

  // size:
  public int flamencoObjectsSize()
  {
    return flamencoObjects == null ? 0 : flamencoObjects.size();
  }

	public void setFlamencoObjects(List<FlamencoObject> flamencoObjects)
	{
		this.flamencoObjects = flamencoObjects;
	}

	public List<FlamencoObject> getSubFacets()
	{
		return subFacets;
	}

  // lazy evaluation:
  public List<FlamencoObject> subFacets()
  {
    if (subFacets == null)
      subFacets = new ArrayList<FlamencoObject>();
    return subFacets;
  }

  // addTo:
  public void addToSubFacets(FlamencoObject element)
  {
    subFacets().add(element);
  }

  // size:
  public int subFacetsSize()
  {
    return subFacets == null ? 0 : subFacets.size();
  }

	public void setSubFacets(List<FlamencoObject> subFacets)
	{
		this.subFacets = subFacets;
	}

	public MetadataString	mediaType()
	{
		MetadataString	result = this.mediaType;
		if (result == null)
		{
			result = new MetadataString();
			this.mediaType = result;
		}
		return result;
	}

	public String getMediaType()
	{
		return this.mediaType == null ? null : mediaType().getValue();
	}

	public MetadataString getMediaTypeMetadata()
	{
		return mediaType;
	}

	public void setMediaType(String mediaType)
	{
		if (mediaType != null)
			this.mediaType().setValue(mediaType);
	}

	public void setMediaTypeMetadata(MetadataString mediaType)
	{
		this.mediaType = mediaType;
	}

	public List<FlamencoObject> getGeneralFacets()
	{
		return generalFacets;
	}

  // lazy evaluation:
  public List<FlamencoObject> generalFacets()
  {
    if (generalFacets == null)
      generalFacets = new ArrayList<FlamencoObject>();
    return generalFacets;
  }

  // addTo:
  public void addToGeneralFacets(FlamencoObject element)
  {
    generalFacets().add(element);
  }

  // size:
  public int generalFacetsSize()
  {
    return generalFacets == null ? 0 : generalFacets.size();
  }

	public void setGeneralFacets(List<FlamencoObject> generalFacets)
	{
		this.generalFacets = generalFacets;
	}

	public List<FlamencoObject> getSpecificFacets()
	{
		return specificFacets;
	}

  // lazy evaluation:
  public List<FlamencoObject> specificFacets()
  {
    if (specificFacets == null)
      specificFacets = new ArrayList<FlamencoObject>();
    return specificFacets;
  }

  // addTo:
  public void addToSpecificFacets(FlamencoObject element)
  {
    specificFacets().add(element);
  }

  // size:
  public int specificFacetsSize()
  {
    return specificFacets == null ? 0 : specificFacets.size();
  }

	public void setSpecificFacets(List<FlamencoObject> specificFacets)
	{
		this.specificFacets = specificFacets;
	}
}
