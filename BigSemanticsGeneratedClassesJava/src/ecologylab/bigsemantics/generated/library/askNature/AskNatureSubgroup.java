package ecologylab.bigsemantics.generated.library.askNature;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2014) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.askNature.AskNatureFunction;
import ecologylab.bigsemantics.metadata.builtins.CompoundDocument;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class AskNatureSubgroup extends CompoundDocument
{
	@simpl_collection("function")
	@mm_name("functions")
	private List<AskNatureFunction> functions;

	public AskNatureSubgroup()
	{ super(); }

	public AskNatureSubgroup(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<AskNatureFunction> getFunctions()
	{
		return functions;
	}

  // lazy evaluation:
  public List<AskNatureFunction> functions()
  {
    if (functions == null)
      functions = new ArrayList<AskNatureFunction>();
    return functions;
  }

  // addTo:
  public void addToFunctions(AskNatureFunction element)
  {
    functions().add(element);
  }

  // size:
  public int functionsSize()
  {
    return functions == null ? 0 : functions.size();
  }

	public void setFunctions(List<AskNatureFunction> functions)
	{
		this.functions = functions;
	}
}
