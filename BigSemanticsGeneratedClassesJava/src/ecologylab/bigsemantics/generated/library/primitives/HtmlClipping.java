package ecologylab.bigsemantics.generated.library.primitives;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2013) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.primitives.Html;
import ecologylab.bigsemantics.metadata.builtins.Clipping;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.scalar.MetadataInteger;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.Integer;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class HtmlClipping extends Clipping<Html>
{
	@simpl_scalar
	private MetadataInteger isTextClipping;

	public HtmlClipping()
	{ super(); }

	public HtmlClipping(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataInteger	isTextClipping()
	{
		MetadataInteger	result = this.isTextClipping;
		if (result == null)
		{
			result = new MetadataInteger();
			this.isTextClipping = result;
		}
		return result;
	}

	public Integer getIsTextClipping()
	{
		return this.isTextClipping == null ? 0 : isTextClipping().getValue();
	}

	public MetadataInteger getIsTextClippingMetadata()
	{
		return isTextClipping;
	}

	public void setIsTextClipping(Integer isTextClipping)
	{
		if (isTextClipping != 0)
			this.isTextClipping().setValue(isTextClipping);
	}

	public void setIsTextClippingMetadata(MetadataInteger isTextClipping)
	{
		this.isTextClipping = isTextClipping;
	}
}
