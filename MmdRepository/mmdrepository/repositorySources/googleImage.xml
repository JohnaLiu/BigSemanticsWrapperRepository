<meta_metadata_repository name="google_image" package="ecologylab.semantics.generated.library.google_image" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" default_user_agent_name="chrome_2">

  <meta_metadata name="google_image" type="image" parser="image">
    <selector url_regex_fragment="https://encrypted-tbn[0-9]+\.google\.com/images" domain="google.com" />
    
    <filter_location>
      <regex match="https://encrypted-tbn([0-9]+)\.google\.com/images" replace="http://t$1.gstatic.com/images" />
    </filter_location>
  </meta_metadata>

	<meta_metadata name="google_image_search" type="image_search" comment="Google image search." parser="xpath" user_agent_name="chrome_12">
  	<selector url_regex="https?://www.google.com/search\?tbm=isch.*" domain="google.com" />
    <example_url url="https://www.google.com/search?tbm=isch&amp;hl=en&amp;q=watergate" />
    
		<collection name="search_results" xpath="//div[@id='ires']//li[@class='rg_li']">
      <def_var name="href_node" xpath="./a/@href" type="node" />
      <scalar name="location" xpath="." context_node="href_node">
        <filter regex="imgurl=([^&amp;]*(&amp;amp;[^&amp;]*)*)" group="1" />
      </scalar>
      <scalar name="thumb_width" xpath="./a/img/@width" />
      <scalar name="thumb_height" xpath="./a/img/@height" />
      <scalar name="ref_location" xpath="." context_node="href_node">
        <filter regex="imgrefurl=([^&amp;]*(&amp;amp;[^&amp;]*)*)" group="1" />
      </scalar>
		</collection> 
		<semantic_actions>
			<get_field name="search_results" />
			<for_each collection="search_results" as="result">
				<get_field object="result" name="location" />
        <parse_document>
          <arg name="location" value="location" />
        </parse_document>
<!-- 				<create_and_visualize_img_surrogate> -->
<!-- 					<arg name="image_purl" value="location" /> -->
<!-- 				</create_and_visualize_img_surrogate> -->
				<get_field object="result" name="ref_location" />
        <parse_document>
          <arg name="location" value="ref_location" />
        </parse_document>
			</for_each>
		</semantic_actions>
	</meta_metadata>
	
</meta_metadata_repository>