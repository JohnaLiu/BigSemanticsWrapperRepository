//
// NsfAward.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.nsf;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.nsf 
{
	/// <summary>
	/// NSF award details.
	/// </summary>
	[SimplInherit]
	public class NsfAward : Grant
	{
		[SimplComposite]
		[MmName("division")]
		private NsfDivision division;

		[SimplScalar]
		private MetadataString amountString;

		[SimplScalar]
		private MetadataString awardInstrument;

		[SimplScalar]
		private MetadataString fieldApplications;

		[SimplScalar]
		private MetadataDate initialAmendmentDate;

		[SimplScalar]
		private MetadataDate latestAmendmentDate;

		[SimplScalar]
		private MetadataString programReferenceCodes;

		[SimplCollection("program_element_code")]
		[MmName("program_element_codes")]
		private List<ecologylab.semantics.metadata.scalar.MetadataString> programElementCodes;

		public NsfAward()
		{ }

		public NsfAward(MetaMetadataCompositeField mmd) : base(mmd) { }


		public NsfDivision Division
		{
			get{return division;}
			set
			{
				if (this.division != value)
				{
					this.division = value;
					this.RaisePropertyChanged( () => this.Division );
				}
			}
		}

		public MetadataString AmountString
		{
			get{return amountString;}
			set
			{
				if (this.amountString != value)
				{
					this.amountString = value;
					this.RaisePropertyChanged( () => this.AmountString );
				}
			}
		}

		public MetadataString AwardInstrument
		{
			get{return awardInstrument;}
			set
			{
				if (this.awardInstrument != value)
				{
					this.awardInstrument = value;
					this.RaisePropertyChanged( () => this.AwardInstrument );
				}
			}
		}

		public MetadataString FieldApplications
		{
			get{return fieldApplications;}
			set
			{
				if (this.fieldApplications != value)
				{
					this.fieldApplications = value;
					this.RaisePropertyChanged( () => this.FieldApplications );
				}
			}
		}

		public MetadataDate InitialAmendmentDate
		{
			get{return initialAmendmentDate;}
			set
			{
				if (this.initialAmendmentDate != value)
				{
					this.initialAmendmentDate = value;
					this.RaisePropertyChanged( () => this.InitialAmendmentDate );
				}
			}
		}

		public MetadataDate LatestAmendmentDate
		{
			get{return latestAmendmentDate;}
			set
			{
				if (this.latestAmendmentDate != value)
				{
					this.latestAmendmentDate = value;
					this.RaisePropertyChanged( () => this.LatestAmendmentDate );
				}
			}
		}

		public MetadataString ProgramReferenceCodes
		{
			get{return programReferenceCodes;}
			set
			{
				if (this.programReferenceCodes != value)
				{
					this.programReferenceCodes = value;
					this.RaisePropertyChanged( () => this.ProgramReferenceCodes );
				}
			}
		}

		public List<ecologylab.semantics.metadata.scalar.MetadataString> ProgramElementCodes
		{
			get{return programElementCodes;}
			set
			{
				if (this.programElementCodes != value)
				{
					this.programElementCodes = value;
					this.RaisePropertyChanged( () => this.ProgramElementCodes );
				}
			}
		}
	}
}
