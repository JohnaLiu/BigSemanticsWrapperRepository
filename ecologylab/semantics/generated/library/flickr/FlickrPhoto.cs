//
// FlickrPhoto.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.flickr;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.flickr 
{
	/// <summary>
	/// A Flickr Image result page
	/// </summary>
	[SimplInherit]
	public class FlickrPhoto : CompoundDocument
	{
		[SimplScalar]
		private MetadataParsedURL imageLocation;

		[SimplScalar]
		private MetadataString views;

		[SimplComposite]
		[MmName("place")]
		private Document place;

		[SimplCollection("flickr_tag_page")]
		[MmName("tags")]
		private List<FlickrTagPage> tags;

		[SimplComposite]
		[MmName("author_photos")]
		private AuthorPhotos authorPhotos;

		public FlickrPhoto()
		{ }

		public FlickrPhoto(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataParsedURL ImageLocation
		{
			get{return imageLocation;}
			set
			{
				if (this.imageLocation != value)
				{
					this.imageLocation = value;
					this.RaisePropertyChanged( () => this.ImageLocation );
				}
			}
		}

		public MetadataString Views
		{
			get{return views;}
			set
			{
				if (this.views != value)
				{
					this.views = value;
					this.RaisePropertyChanged( () => this.Views );
				}
			}
		}

		public Document Place
		{
			get{return place;}
			set
			{
				if (this.place != value)
				{
					this.place = value;
					this.RaisePropertyChanged( () => this.Place );
				}
			}
		}

		public List<FlickrTagPage> Tags
		{
			get{return tags;}
			set
			{
				if (this.tags != value)
				{
					this.tags = value;
					this.RaisePropertyChanged( () => this.Tags );
				}
			}
		}

		public AuthorPhotos AuthorPhotos
		{
			get{return authorPhotos;}
			set
			{
				if (this.authorPhotos != value)
				{
					this.authorPhotos = value;
					this.RaisePropertyChanged( () => this.AuthorPhotos );
				}
			}
		}
	}
}
