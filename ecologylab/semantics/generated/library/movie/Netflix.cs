//
// Netflix.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.movie;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.movie 
{
	[SimplInherit]
	public class Netflix : CompoundDocument
	{
		[SimplScalar]
		private MetadataString mpaaRating;

		[SimplScalar]
		private MetadataInteger runtime;

		[SimplScalar]
		private MetadataInteger theaterRelease;

		[SimplCollection("cast")]
		[MmName("cast")]
		private List<Cast> cast;

		public Netflix()
		{ }

		public Netflix(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString MpaaRating
		{
			get{return mpaaRating;}
			set
			{
				if (this.mpaaRating != value)
				{
					this.mpaaRating = value;
					this.RaisePropertyChanged( () => this.MpaaRating );
				}
			}
		}

		public MetadataInteger Runtime
		{
			get{return runtime;}
			set
			{
				if (this.runtime != value)
				{
					this.runtime = value;
					this.RaisePropertyChanged( () => this.Runtime );
				}
			}
		}

		public MetadataInteger TheaterRelease
		{
			get{return theaterRelease;}
			set
			{
				if (this.theaterRelease != value)
				{
					this.theaterRelease = value;
					this.RaisePropertyChanged( () => this.TheaterRelease );
				}
			}
		}

		public List<Cast> Cast
		{
			get{return cast;}
			set
			{
				if (this.cast != value)
				{
					this.cast = value;
					this.RaisePropertyChanged( () => this.Cast );
				}
			}
		}
	}
}
