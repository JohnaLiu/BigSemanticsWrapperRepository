//
// MovieInfo.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.movie 
{
	/// <summary>
	/// The movie class
	/// </summary>
	[SimplInherit]
	public class MovieInfo : CompoundDocument
	{
		/// <summary>
		/// Short description of the movie
		/// </summary>
		[SimplScalar]
		private MetadataString shortDesc;

		/// <summary>
		/// Storyline of the movie
		/// </summary>
		[SimplScalar]
		private MetadataString storyline;

		/// <summary>
		/// Score critics gave to the movie
		/// </summary>
		[SimplScalar]
		private MetadataString rating;

		/// <summary>
		/// MPAA rating
		/// </summary>
		[SimplScalar]
		private MetadataString mpaaRating;

		/// <summary>
		/// How long the movie runs
		/// </summary>
		[SimplScalar]
		private MetadataString runtime;

		/// <summary>
		/// When the movie was released in theaters
		/// </summary>
		[SimplScalar]
		private MetadataString theaterRelease;

		/// <summary>
		/// Who directed the movie
		/// </summary>
		[SimplCollection("document")]
		[MmName("directors")]
		private List<Document> directors;

		/// <summary>
		/// Who wrote the movie
		/// </summary>
		[SimplCollection("document")]
		[MmName("writers")]
		private List<Document> writers;

		/// <summary>
		/// Movie Poster or other image
		/// </summary>
		[SimplScalar]
		private MetadataParsedURL pic;

		/// <summary>
		/// Movie genres
		/// </summary>
		[SimplCollection("document")]
		[MmName("genres")]
		private List<Document> genres;

		public MovieInfo()
		{ }

		public MovieInfo(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString ShortDesc
		{
			get{return shortDesc;}
			set
			{
				if (this.shortDesc != value)
				{
					this.shortDesc = value;
					this.RaisePropertyChanged( () => this.ShortDesc );
				}
			}
		}

		public MetadataString Storyline
		{
			get{return storyline;}
			set
			{
				if (this.storyline != value)
				{
					this.storyline = value;
					this.RaisePropertyChanged( () => this.Storyline );
				}
			}
		}

		public MetadataString Rating
		{
			get{return rating;}
			set
			{
				if (this.rating != value)
				{
					this.rating = value;
					this.RaisePropertyChanged( () => this.Rating );
				}
			}
		}

		public MetadataString MpaaRating
		{
			get{return mpaaRating;}
			set
			{
				if (this.mpaaRating != value)
				{
					this.mpaaRating = value;
					this.RaisePropertyChanged( () => this.MpaaRating );
				}
			}
		}

		public MetadataString Runtime
		{
			get{return runtime;}
			set
			{
				if (this.runtime != value)
				{
					this.runtime = value;
					this.RaisePropertyChanged( () => this.Runtime );
				}
			}
		}

		public MetadataString TheaterRelease
		{
			get{return theaterRelease;}
			set
			{
				if (this.theaterRelease != value)
				{
					this.theaterRelease = value;
					this.RaisePropertyChanged( () => this.TheaterRelease );
				}
			}
		}

		public List<Document> Directors
		{
			get{return directors;}
			set
			{
				if (this.directors != value)
				{
					this.directors = value;
					this.RaisePropertyChanged( () => this.Directors );
				}
			}
		}

		public List<Document> Writers
		{
			get{return writers;}
			set
			{
				if (this.writers != value)
				{
					this.writers = value;
					this.RaisePropertyChanged( () => this.Writers );
				}
			}
		}

		public MetadataParsedURL Pic
		{
			get{return pic;}
			set
			{
				if (this.pic != value)
				{
					this.pic = value;
					this.RaisePropertyChanged( () => this.Pic );
				}
			}
		}

		public List<Document> Genres
		{
			get{return genres;}
			set
			{
				if (this.genres != value)
				{
					this.genres = value;
					this.RaisePropertyChanged( () => this.Genres );
				}
			}
		}
	}
}
