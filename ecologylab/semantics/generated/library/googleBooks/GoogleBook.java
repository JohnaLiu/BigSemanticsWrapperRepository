package ecologylab.semantics.generated.library.googleBooks;

import ecologylab.serialization.ElementState.xml_other_tags;
import java.util.ArrayList;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.serialization.Hint;
import ecologylab.semantics.generated.library.googleBooks.GoogleBook;
import java.util.List;
import ecologylab.semantics.generated.library.googleBooks.MmdInlinePageInSelectedPagesInGoogleBook;
import ecologylab.semantics.generated.library.publication.Book;
import ecologylab.serialization.simpl_inherit;
import ecologylab.net.ParsedURL;
import ecologylab.serialization.ElementState.xml_tag;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;

/**
*  GoogleBook.java
*  s.im.pl serialization
*
*  Generated by JavaTranslator on 07/20/11.
*  Copyright 2011 Interface Ecology Lab. 
*/

/** 
 */ 
@simpl_inherit
public class GoogleBook extends Book
{
	/** 
	 */ 
	@simpl_scalar	private MetadataString category;

	/** 
	 */ 
	@simpl_collection("google_book") @mm_name("references_from_books")	private List<GoogleBook> referencesFromBooks;

	/** 
	 */ 
	@simpl_scalar	private MetadataParsedURL placesMentionedKml;

	/** 
	 */ 
	@simpl_collection("page") @mm_name("selected_pages")	private List<MmdInlinePageInSelectedPagesInGoogleBook> selectedPages;

	public GoogleBook()
	{ }

	public GoogleBook(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	category()
	{
		MetadataString	result = this.category;
		if (result == null)
		{
			result = new MetadataString();
			this.category = result;
		}
		return result;
	}

	public String getCategory()
	{
		return this.category().getValue();
	}

	public MetadataString getCategoryMetadata()
	{
		return category;
	}

	public void setCategory(String category)
	{
		this.category().setValue(category);
	}

	public void setCategoryMetadata(MetadataString category)
	{
		this.category = category;
	}

	public List<GoogleBook> getReferencesFromBooks()
	{
		return referencesFromBooks;
	}

	public void setReferencesFromBooks(List<GoogleBook> referencesFromBooks)
	{
		this.referencesFromBooks = referencesFromBooks;
	}

	public MetadataParsedURL	placesMentionedKml()
	{
		MetadataParsedURL	result = this.placesMentionedKml;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.placesMentionedKml = result;
		}
		return result;
	}

	public ParsedURL getPlacesMentionedKml()
	{
		return this.placesMentionedKml().getValue();
	}

	public MetadataParsedURL getPlacesMentionedKmlMetadata()
	{
		return placesMentionedKml;
	}

	public void setPlacesMentionedKml(ParsedURL placesMentionedKml)
	{
		this.placesMentionedKml().setValue(placesMentionedKml);
	}

	public void setPlacesMentionedKmlMetadata(MetadataParsedURL placesMentionedKml)
	{
		this.placesMentionedKml = placesMentionedKml;
	}

	public List<MmdInlinePageInSelectedPagesInGoogleBook> getSelectedPages()
	{
		return selectedPages;
	}

	public void setSelectedPages(List<MmdInlinePageInSelectedPagesInGoogleBook> selectedPages)
	{
		this.selectedPages = selectedPages;
	}
}
