//
// Patent.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.creativeWork;
using ecologylab.semantics.generated.library.patents;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.patents 
{
	/// <summary>
	/// Patents Class
	/// </summary>
	[SimplInherit]
	public class Patent : CreativeWork
	{
		[SimplScalar]
		private MetadataString inventor;

		[SimplScalar]
		private MetadataDate filingDate;

		[SimplCollection("patent_classification")]
		[MmName("classifications")]
		private List<PatentClassification> classifications;

		[SimplCollection("claim")]
		[MmName("claims")]
		private List<ecologylab.semantics.metadata.scalar.MetadataString> claims;

		/// <summary>
		/// subsequent patents that cite this
		/// </summary>
		[SimplCollection("patent")]
		[SimplOtherTags(new String[] {"referenced_bys"})]
		[MmName("citations")]
		private List<Patent> citations;

		/// <summary>
		/// prior patents that this references
		/// </summary>
		[SimplCollection("patent")]
		[MmName("references")]
		private List<Patent> references;

		[SimplCollection("image")]
		[MmName("drawings")]
		private List<Image> drawings;

		public Patent()
		{ }

		public Patent(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Inventor
		{
			get{return inventor;}
			set
			{
				if (this.inventor != value)
				{
					this.inventor = value;
					this.RaisePropertyChanged( () => this.Inventor );
				}
			}
		}

		public MetadataDate FilingDate
		{
			get{return filingDate;}
			set
			{
				if (this.filingDate != value)
				{
					this.filingDate = value;
					this.RaisePropertyChanged( () => this.FilingDate );
				}
			}
		}

		public List<PatentClassification> Classifications
		{
			get{return classifications;}
			set
			{
				if (this.classifications != value)
				{
					this.classifications = value;
					this.RaisePropertyChanged( () => this.Classifications );
				}
			}
		}

		public List<ecologylab.semantics.metadata.scalar.MetadataString> Claims
		{
			get{return claims;}
			set
			{
				if (this.claims != value)
				{
					this.claims = value;
					this.RaisePropertyChanged( () => this.Claims );
				}
			}
		}

		public List<Patent> Citations
		{
			get{return citations;}
			set
			{
				if (this.citations != value)
				{
					this.citations = value;
					this.RaisePropertyChanged( () => this.Citations );
				}
			}
		}

		public List<Patent> References
		{
			get{return references;}
			set
			{
				if (this.references != value)
				{
					this.references = value;
					this.RaisePropertyChanged( () => this.References );
				}
			}
		}

		public List<Image> Drawings
		{
			get{return drawings;}
			set
			{
				if (this.drawings != value)
				{
					this.drawings = value;
					this.RaisePropertyChanged( () => this.Drawings );
				}
			}
		}
	}
}
