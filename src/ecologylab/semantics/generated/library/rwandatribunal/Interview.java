package ecologylab.semantics.generated.library.rwandatribunal;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.generated.library.rwandatribunal.VideoInterview;
import ecologylab.semantics.metadata.Metadata;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *personnel interview
 */ 
@simpl_inherit
public class Interview extends Metadata
{
	@simpl_scalar
	private MetadataString interviewee;

	/** 
	 *personnel pic
	 */ 
	@simpl_scalar
	private MetadataParsedURL pic;

	/** 
	 *topic videos
	 */ 
	@simpl_collection("video_interview")
	@mm_name("voices")
	private List<VideoInterview> voices;

	/** 
	 *segmented videos
	 */ 
	@simpl_collection("video_interview")
	@mm_name("segments")
	private List<VideoInterview> segments;

	public Interview()
	{ super(); }

	public Interview(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	interviewee()
	{
		MetadataString	result = this.interviewee;
		if (result == null)
		{
			result = new MetadataString();
			this.interviewee = result;
		}
		return result;
	}

	public String getInterviewee()
	{
		return this.interviewee == null ? null : interviewee().getValue();
	}

	public MetadataString getIntervieweeMetadata()
	{
		return interviewee;
	}

	public void setInterviewee(String interviewee)
	{
		if (interviewee != null)
			this.interviewee().setValue(interviewee);
	}

	public void setIntervieweeMetadata(MetadataString interviewee)
	{
		this.interviewee = interviewee;
	}

	public MetadataParsedURL	pic()
	{
		MetadataParsedURL	result = this.pic;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.pic = result;
		}
		return result;
	}

	public ParsedURL getPic()
	{
		return this.pic == null ? null : pic().getValue();
	}

	public MetadataParsedURL getPicMetadata()
	{
		return pic;
	}

	public void setPic(ParsedURL pic)
	{
		if (pic != null)
			this.pic().setValue(pic);
	}

	public void setPicMetadata(MetadataParsedURL pic)
	{
		this.pic = pic;
	}

	public List<VideoInterview> getVoices()
	{
		return voices;
	}

  // lazy evaluation:
  public List<VideoInterview> voices()
  {
    if (voices == null)
      voices = new ArrayList<VideoInterview>();
    return voices;
  }

  // addTo:
  public void addToVoices(VideoInterview element)
  {
    voices().add(element);
  }

  // size:
  public int voicesSize()
  {
    return voices == null ? 0 : voices.size();
  }

	public void setVoices(List<VideoInterview> voices)
	{
		this.voices = voices;
	}

	public List<VideoInterview> getSegments()
	{
		return segments;
	}

  // lazy evaluation:
  public List<VideoInterview> segments()
  {
    if (segments == null)
      segments = new ArrayList<VideoInterview>();
    return segments;
  }

  // addTo:
  public void addToSegments(VideoInterview element)
  {
    segments().add(element);
  }

  // size:
  public int segmentsSize()
  {
    return segments == null ? 0 : segments.size();
  }

	public void setSegments(List<VideoInterview> segments)
	{
		this.segments = segments;
	}
}
