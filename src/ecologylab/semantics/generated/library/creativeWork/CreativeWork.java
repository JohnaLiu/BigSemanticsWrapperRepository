package ecologylab.semantics.generated.library.creativeWork;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.semantics.generated.library.creativeWork.Author;
import ecologylab.semantics.metadata.builtins.CompoundDocument;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataInteger;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_other_tags;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.Integer;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class CreativeWork extends CompoundDocument
{
	/** 
	 *Set of authors.
	 */ 
	@simpl_collection("author")
	@mm_name("authors")
	private List<Author> authors;

	@simpl_scalar
	@simpl_other_tags({"year_of_publication"})
	private MetadataInteger year;

	/** 
	 *rating in some context
	 */ 
	@simpl_scalar
	private MetadataString overallRating;

	@simpl_composite
	@mm_name("rich_media")
	private CompoundDocument richMedia;

	public CreativeWork()
	{ super(); }

	public CreativeWork(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<Author> getAuthors()
	{
		return authors;
	}

  // lazy evaluation:
  public List<Author> authors()
  {
    if (authors == null)
      authors = new ArrayList<Author>();
    return authors;
  }

  // addTo:
  public void addToAuthors(Author element)
  {
    authors().add(element);
  }

  // size:
  public int authorsSize()
  {
    return authors == null ? 0 : authors.size();
  }

	public void setAuthors(List<Author> authors)
	{
		this.authors = authors;
	}

	public MetadataInteger	year()
	{
		MetadataInteger	result = this.year;
		if (result == null)
		{
			result = new MetadataInteger();
			this.year = result;
		}
		return result;
	}

	public Integer getYear()
	{
		return this.year == null ? 0 : year().getValue();
	}

	public MetadataInteger getYearMetadata()
	{
		return year;
	}

	public void setYear(Integer year)
	{
		if (year != 0)
			this.year().setValue(year);
	}

	public void setYearMetadata(MetadataInteger year)
	{
		this.year = year;
	}

	public MetadataString	overallRating()
	{
		MetadataString	result = this.overallRating;
		if (result == null)
		{
			result = new MetadataString();
			this.overallRating = result;
		}
		return result;
	}

	public String getOverallRating()
	{
		return this.overallRating == null ? null : overallRating().getValue();
	}

	public MetadataString getOverallRatingMetadata()
	{
		return overallRating;
	}

	public void setOverallRating(String overallRating)
	{
		if (overallRating != null)
			this.overallRating().setValue(overallRating);
	}

	public void setOverallRatingMetadata(MetadataString overallRating)
	{
		this.overallRating = overallRating;
	}

	public CompoundDocument getRichMedia()
	{
		return richMedia;
	}

	public void setRichMedia(CompoundDocument richMedia)
	{
		this.richMedia = richMedia;
	}
}
