package ecologylab.semantics.generated.library;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.semantics.generated.library.ImageResult;
import ecologylab.semantics.metadata.builtins.CompoundDocument;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_nowrap;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *Google image search type
 */ 
@simpl_inherit
public class GoogleImageSearchType extends CompoundDocument
{
	/** 
	 *Collection of results for google image search
	 */ 
	@simpl_collection("image_result")
	@simpl_nowrap
	@mm_name("image_results")
	private List<ImageResult> imageResults;

	public GoogleImageSearchType()
	{ super(); }

	public GoogleImageSearchType(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<ImageResult> getImageResults()
	{
		return imageResults;
	}

  // lazy evaluation:
  public List<ImageResult> imageResults()
  {
    if (imageResults == null)
      imageResults = new ArrayList<ImageResult>();
    return imageResults;
  }

  // addTo:
  public void addToImageResults(ImageResult element)
  {
    imageResults().add(element);
  }

  // size:
  public int imageResultsSize()
  {
    return imageResults == null ? 0 : imageResults.size();
  }

	public void setImageResults(List<ImageResult> imageResults)
	{
		this.imageResults = imageResults;
	}
}
