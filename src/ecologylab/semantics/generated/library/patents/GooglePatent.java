package ecologylab.semantics.generated.library.patents;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.generated.library.patents.GooglePatent;
import ecologylab.semantics.generated.library.patents.Patent;
import ecologylab.semantics.generated.library.search.SearchResult;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTranslationScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_other_tags;
import ecologylab.serialization.annotations.simpl_scalar;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *Google Patents Class
 */ 
@simpl_inherit
public class GooglePatent extends Patent
{
	@simpl_scalar
	private MetadataParsedURL picLink;

	/** 
	 *subsequent patents that represent this
	 */ 
	@simpl_collection("google_patent")
	@simpl_other_tags({"referenced_bys"})
	@mm_name("citations")
	private List<GooglePatent> citations;

	/** 
	 *prior patents that this references
	 */ 
	@simpl_collection("google_patent")
	@mm_name("references")
	private List<GooglePatent> references;

	@simpl_collection("search_result")
	@mm_name("pic_links")
	private List<SearchResult> picLinks;

	public GooglePatent()
	{ super(); }

	public GooglePatent(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataParsedURL	picLink()
	{
		MetadataParsedURL	result = this.picLink;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.picLink = result;
		}
		return result;
	}

	public ParsedURL getPicLink()
	{
		return this.picLink == null ? null : picLink().getValue();
	}

	public MetadataParsedURL getPicLinkMetadata()
	{
		return picLink;
	}

	public void setPicLink(ParsedURL picLink)
	{
		if (picLink != null)
			this.picLink().setValue(picLink);
	}

	public void setPicLinkMetadata(MetadataParsedURL picLink)
	{
		this.picLink = picLink;
	}

	public List<GooglePatent> getCitations()
	{
		return citations;
	}

	public void setCitations(List<GooglePatent> citations)
	{
		this.citations = citations;
	}

	public List<GooglePatent> getReferences()
	{
		return references;
	}

	public void setReferences(List<GooglePatent> references)
	{
		this.references = references;
	}

	public List<SearchResult> getPicLinks()
	{
		return picLinks;
	}

	public void setPicLinks(List<SearchResult> picLinks)
	{
		this.picLinks = picLinks;
	}
}
