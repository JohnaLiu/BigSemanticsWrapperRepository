package ecologylab.semantics.generated.library.rich_bookmark;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.semantics.generated.library.rich_bookmark.RichBookmark;
import ecologylab.semantics.metadata.builtins.Document;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataFloat;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.Float;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class RichBookmarkCollection extends Document
{
	@simpl_collection("rich_bookmark")
	@mm_name("rich_bookmarks")
	private List<RichBookmark> richBookmarks;

	@simpl_scalar
	private MetadataFloat version;

	@simpl_scalar
	private MetadataFloat metadataVersion;

	public RichBookmarkCollection()
	{ super(); }

	public RichBookmarkCollection(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<RichBookmark> getRichBookmarks()
	{
		return richBookmarks;
	}

	public void setRichBookmarks(List<RichBookmark> richBookmarks)
	{
		this.richBookmarks = richBookmarks;
	}

	public MetadataFloat	version()
	{
		MetadataFloat	result = this.version;
		if (result == null)
		{
			result = new MetadataFloat();
			this.version = result;
		}
		return result;
	}

	public Float getVersion()
	{
		return this.version == null ? 0 : version().getValue();
	}

	public MetadataFloat getVersionMetadata()
	{
		return version;
	}

	public void setVersion(Float version)
	{
		if (version != 0)
			this.version().setValue(version);
	}

	public void setVersionMetadata(MetadataFloat version)
	{
		this.version = version;
	}

	public MetadataFloat	metadataVersion()
	{
		MetadataFloat	result = this.metadataVersion;
		if (result == null)
		{
			result = new MetadataFloat();
			this.metadataVersion = result;
		}
		return result;
	}

	public Float getMetadataVersion()
	{
		return this.metadataVersion == null ? 0 : metadataVersion().getValue();
	}

	public MetadataFloat getMetadataVersionMetadata()
	{
		return metadataVersion;
	}

	public void setMetadataVersion(Float metadataVersion)
	{
		if (metadataVersion != 0)
			this.metadataVersion().setValue(metadataVersion);
	}

	public void setMetadataVersionMetadata(MetadataFloat metadataVersion)
	{
		this.metadataVersion = metadataVersion;
	}
}
