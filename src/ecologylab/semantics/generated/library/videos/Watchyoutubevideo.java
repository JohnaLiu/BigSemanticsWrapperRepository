package ecologylab.semantics.generated.library.videos;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.generated.library.videos.CommentResult;
import ecologylab.semantics.metadata.builtins.CompoundDocument;
import ecologylab.semantics.metadata.builtins.Document;
import ecologylab.semantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.semantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *youtube video details
 */ 
@simpl_inherit
public class Watchyoutubevideo extends CompoundDocument
{
	/** 
	 *Date on which video is uploaded
	 */ 
	@simpl_scalar
	private MetadataString date;

	/** 
	 *author of video
	 */ 
	@simpl_scalar
	private MetadataString author;

	/** 
	 *link to auther detail
	 */ 
	@simpl_scalar
	private MetadataParsedURL authorlink;

	/** 
	 *video details
	 */ 
	@simpl_scalar
	private MetadataString details;

	/** 
	 *list of tags
	 */ 
	@simpl_collection("document")
	@mm_name("tag")
	private List<Document> tag;

	/** 
	 *video License
	 */ 
	@simpl_scalar
	private MetadataString license;

	/** 
	 *top 2 comments if any
	 */ 
	@simpl_collection("comment_result")
	@mm_name("top_commet")
	private List<CommentResult> topCommet;

	/** 
	 *total no of comment recived
	 */ 
	@simpl_scalar
	private MetadataString noOfComment;

	/** 
	 *total no of likes recived
	 */ 
	@simpl_scalar
	private MetadataString likes;

	/** 
	 *total no of dislikes recived
	 */ 
	@simpl_scalar
	private MetadataString dislikes;

	/** 
	 *total no of views
	 */ 
	@simpl_scalar
	private MetadataString viewCount;

	public Watchyoutubevideo()
	{ super(); }

	public Watchyoutubevideo(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	date()
	{
		MetadataString	result = this.date;
		if (result == null)
		{
			result = new MetadataString();
			this.date = result;
		}
		return result;
	}

	public String getDate()
	{
		return this.date == null ? null : date().getValue();
	}

	public MetadataString getDateMetadata()
	{
		return date;
	}

	public void setDate(String date)
	{
		if (date != null)
			this.date().setValue(date);
	}

	public void setDateMetadata(MetadataString date)
	{
		this.date = date;
	}

	public MetadataString	author()
	{
		MetadataString	result = this.author;
		if (result == null)
		{
			result = new MetadataString();
			this.author = result;
		}
		return result;
	}

	public String getAuthor()
	{
		return this.author == null ? null : author().getValue();
	}

	public MetadataString getAuthorMetadata()
	{
		return author;
	}

	public void setAuthor(String author)
	{
		if (author != null)
			this.author().setValue(author);
	}

	public void setAuthorMetadata(MetadataString author)
	{
		this.author = author;
	}

	public MetadataParsedURL	authorlink()
	{
		MetadataParsedURL	result = this.authorlink;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.authorlink = result;
		}
		return result;
	}

	public ParsedURL getAuthorlink()
	{
		return this.authorlink == null ? null : authorlink().getValue();
	}

	public MetadataParsedURL getAuthorlinkMetadata()
	{
		return authorlink;
	}

	public void setAuthorlink(ParsedURL authorlink)
	{
		if (authorlink != null)
			this.authorlink().setValue(authorlink);
	}

	public void setAuthorlinkMetadata(MetadataParsedURL authorlink)
	{
		this.authorlink = authorlink;
	}

	public MetadataString	details()
	{
		MetadataString	result = this.details;
		if (result == null)
		{
			result = new MetadataString();
			this.details = result;
		}
		return result;
	}

	public String getDetails()
	{
		return this.details == null ? null : details().getValue();
	}

	public MetadataString getDetailsMetadata()
	{
		return details;
	}

	public void setDetails(String details)
	{
		if (details != null)
			this.details().setValue(details);
	}

	public void setDetailsMetadata(MetadataString details)
	{
		this.details = details;
	}

	public List<Document> getTag()
	{
		return tag;
	}

  // lazy evaluation:
  public List<Document> tag()
  {
    if (tag == null)
      tag = new ArrayList<Document>();
    return tag;
  }

  // addTo:
  public void addToTag(Document element)
  {
    tag().add(element);
  }

  // size:
  public int tagSize()
  {
    return tag == null ? 0 : tag.size();
  }

	public void setTag(List<Document> tag)
	{
		this.tag = tag;
	}

	public MetadataString	license()
	{
		MetadataString	result = this.license;
		if (result == null)
		{
			result = new MetadataString();
			this.license = result;
		}
		return result;
	}

	public String getLicense()
	{
		return this.license == null ? null : license().getValue();
	}

	public MetadataString getLicenseMetadata()
	{
		return license;
	}

	public void setLicense(String license)
	{
		if (license != null)
			this.license().setValue(license);
	}

	public void setLicenseMetadata(MetadataString license)
	{
		this.license = license;
	}

	public List<CommentResult> getTopCommet()
	{
		return topCommet;
	}

  // lazy evaluation:
  public List<CommentResult> topCommet()
  {
    if (topCommet == null)
      topCommet = new ArrayList<CommentResult>();
    return topCommet;
  }

  // addTo:
  public void addToTopCommet(CommentResult element)
  {
    topCommet().add(element);
  }

  // size:
  public int topCommetSize()
  {
    return topCommet == null ? 0 : topCommet.size();
  }

	public void setTopCommet(List<CommentResult> topCommet)
	{
		this.topCommet = topCommet;
	}

	public MetadataString	noOfComment()
	{
		MetadataString	result = this.noOfComment;
		if (result == null)
		{
			result = new MetadataString();
			this.noOfComment = result;
		}
		return result;
	}

	public String getNoOfComment()
	{
		return this.noOfComment == null ? null : noOfComment().getValue();
	}

	public MetadataString getNoOfCommentMetadata()
	{
		return noOfComment;
	}

	public void setNoOfComment(String noOfComment)
	{
		if (noOfComment != null)
			this.noOfComment().setValue(noOfComment);
	}

	public void setNoOfCommentMetadata(MetadataString noOfComment)
	{
		this.noOfComment = noOfComment;
	}

	public MetadataString	likes()
	{
		MetadataString	result = this.likes;
		if (result == null)
		{
			result = new MetadataString();
			this.likes = result;
		}
		return result;
	}

	public String getLikes()
	{
		return this.likes == null ? null : likes().getValue();
	}

	public MetadataString getLikesMetadata()
	{
		return likes;
	}

	public void setLikes(String likes)
	{
		if (likes != null)
			this.likes().setValue(likes);
	}

	public void setLikesMetadata(MetadataString likes)
	{
		this.likes = likes;
	}

	public MetadataString	dislikes()
	{
		MetadataString	result = this.dislikes;
		if (result == null)
		{
			result = new MetadataString();
			this.dislikes = result;
		}
		return result;
	}

	public String getDislikes()
	{
		return this.dislikes == null ? null : dislikes().getValue();
	}

	public MetadataString getDislikesMetadata()
	{
		return dislikes;
	}

	public void setDislikes(String dislikes)
	{
		if (dislikes != null)
			this.dislikes().setValue(dislikes);
	}

	public void setDislikesMetadata(MetadataString dislikes)
	{
		this.dislikes = dislikes;
	}

	public MetadataString	viewCount()
	{
		MetadataString	result = this.viewCount;
		if (result == null)
		{
			result = new MetadataString();
			this.viewCount = result;
		}
		return result;
	}

	public String getViewCount()
	{
		return this.viewCount == null ? null : viewCount().getValue();
	}

	public MetadataString getViewCountMetadata()
	{
		return viewCount;
	}

	public void setViewCount(String viewCount)
	{
		if (viewCount != null)
			this.viewCount().setValue(viewCount);
	}

	public void setViewCountMetadata(MetadataString viewCount)
	{
		this.viewCount = viewCount;
	}
}
